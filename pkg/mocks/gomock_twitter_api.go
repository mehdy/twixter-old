// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mehdy/twixter/pkg/interactors (interfaces: TwitterAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	entities "github.com/mehdy/twixter/pkg/entities"
	reflect "reflect"
)

// MockTwitterAPI is a mock of TwitterAPI interface
type MockTwitterAPI struct {
	ctrl     *gomock.Controller
	recorder *MockTwitterAPIMockRecorder
}

// MockTwitterAPIMockRecorder is the mock recorder for MockTwitterAPI
type MockTwitterAPIMockRecorder struct {
	mock *MockTwitterAPI
}

// NewMockTwitterAPI creates a new mock instance
func NewMockTwitterAPI(ctrl *gomock.Controller) *MockTwitterAPI {
	mock := &MockTwitterAPI{ctrl: ctrl}
	mock.recorder = &MockTwitterAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTwitterAPI) EXPECT() *MockTwitterAPIMockRecorder {
	return m.recorder
}

// Followers mocks base method
func (m *MockTwitterAPI) Followers(arg0 string) (chan []*entities.TwitterProfile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Followers", arg0)
	ret0, _ := ret[0].(chan []*entities.TwitterProfile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Followers indicates an expected call of Followers
func (mr *MockTwitterAPIMockRecorder) Followers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Followers", reflect.TypeOf((*MockTwitterAPI)(nil).Followers), arg0)
}

// Followings mocks base method
func (m *MockTwitterAPI) Followings(arg0 string) (chan []*entities.TwitterProfile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Followings", arg0)
	ret0, _ := ret[0].(chan []*entities.TwitterProfile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Followings indicates an expected call of Followings
func (mr *MockTwitterAPIMockRecorder) Followings(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Followings", reflect.TypeOf((*MockTwitterAPI)(nil).Followings), arg0)
}

// Profile mocks base method
func (m *MockTwitterAPI) Profile(arg0 string) (*entities.TwitterProfile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Profile", arg0)
	ret0, _ := ret[0].(*entities.TwitterProfile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Profile indicates an expected call of Profile
func (mr *MockTwitterAPIMockRecorder) Profile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Profile", reflect.TypeOf((*MockTwitterAPI)(nil).Profile), arg0)
}
