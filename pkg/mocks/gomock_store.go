// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mehdy/twixter/pkg/interactors (interfaces: Store)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	entities "github.com/mehdy/twixter/pkg/entities"
	reflect "reflect"
)

// MockStore is a mock of Store interface
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
}

// MockStoreMockRecorder is the mock recorder for MockStore
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// GetProfile mocks base method
func (m *MockStore) GetProfile(arg0 string) (*entities.TwitterProfile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfile", arg0)
	ret0, _ := ret[0].(*entities.TwitterProfile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfile indicates an expected call of GetProfile
func (mr *MockStoreMockRecorder) GetProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfile", reflect.TypeOf((*MockStore)(nil).GetProfile), arg0)
}

// SaveProfile mocks base method
func (m *MockStore) SaveProfile(arg0 *entities.TwitterProfile) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveProfile", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveProfile indicates an expected call of SaveProfile
func (mr *MockStoreMockRecorder) SaveProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveProfile", reflect.TypeOf((*MockStore)(nil).SaveProfile), arg0)
}
